imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        site_url: %stems.site.url%
        stems_theme: %stems.site.theme%
        stems_site_name:  %stems.site.name%
        stems_site_keywords: %stems.site.keywords%
        stems_site_description: %stems.site.description%
        service_stems_section: '@stems.core.sections.manager'

# Liip Imagine
liip_imagine:
    resolvers:
       default:
          web_path: ~
    filter_sets:
        cache: ~
        blog_header:
            quality: 80
            filters:
                thumbnail: { size: [1080, 720], mode: outbound }
        blog_homepage_main:
            quality: 80
            filters:
                thumbnail: { size: [690, 345], mode: outbound }
        blog_homepage_small:
            quality: 80
            filters:
                thumbnail: { size: [330, 144], mode: outbound }

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    assets:
        admin_js:
            inputs:
                - '@StemsCoreBundle/Resources/public/js/admin/vendor/*'
                - '@StemsCoreBundle/Resources/public/js/admin/admin.js'
                - '@StemsPageBundle/Resources/public/js/admin.js'
                - '@StemsMediaBundle/Resources/public/js/admin.js'
                - '@StemsBlogBundle/Resources/public/js/admin/admin.js'
                - '@ThreadAndMirrorEditorsPicksBundle/Resources/public/js/admin.js'
                - '@ThreadAndMirrorProductsBundle/Resources/public/js/admin.js'
        admin_css:
            inputs:
                - '@StemsCoreBundle/Resources/public/css/admin/vendor/*'
                - '@StemsCoreBundle/Resources/public/css/admin/admin.css'
        frontend_js:
            inputs:
                - '@StemsCoreBundle/Resources/public/js/front/vendor/*'
                - '@StemsCoreBundle/Resources/public/js/front/frontend.js'
                - '@ThreadAndMirrorSocialBundle/Resources/public/js/frontend.js'
        frontend_css:
            inputs:
                - '@StemsCoreBundle/Resources/public/css/front/vendor/*'
                - '@ThreadAndMirrorProductsBundle/Resources/public/css/stylesheet.css'
    filters:
        cssrewrite: ~
        uglifycss:
            bin: /usr/bin/uglifycss
        uglifyjs2:
            bin: /usr/bin/uglifyjs

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        # query_cache_driver:
        #     type: memcached
        #     class: Doctrine\Common\Cache\MemcacheCached
        #     host: localhost
        #     port: 11211
        #     instance_class: Memcached
        # metadata_cache_driver:
        #     type: memcache
        #     class: Doctrine\Common\Cache\MemcacheCached
        #     host: localhost
        #     port: 11211
        #     instance_class: Memcached
        # result_cache_driver:
        #     type: memcached
        #     class: Doctrine\Common\Cache\MemcacheCached
        #     host: localhost
        #     port: 11211
        #     instance_class: Memcached
        # mappings:
        #     gedmo_translatable:
        #         type: annotation
        #         prefix: Gedmo\Translatable\Entity
        #         dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
        #         alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
        #         is_bundle: false
        #     gedmo_translator:
        #         type: annotation
        #         prefix: Gedmo\Translator\Entity
        #         dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
        #         alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
        #         is_bundle: false
        #     gedmo_loggable:
        #         type: annotation
        #         prefix: Gedmo\Loggable\Entity
        #         dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
        #         alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
        #         is_bundle: false
        #     gedmo_tree:
        #         type: annotation
        #         prefix: Gedmo\Tree\Entity
        #         dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
        #         alias: GedmoTree # this one is optional and will default to the name set for the mapping
        #         is_bundle: false

# Swiftmailer Configuration
swiftmailer:
    transport:  %mailer_transport%
    host:       %mailer_host%
    auth_mode:  %mailer_auth_mode%
    username:   %mailer_user%
    password:   %mailer_password%

# NewRelic Configuration
ekino_new_relic:
    enabled: true                         # Defaults to true
    application_name: 'Thread and Mirror' # default value in newrelic is "PHP Application", or whatever is set
                                          # as php ini-value
    api_key: e7f98a1be3616d3aee990c449b1c79b327904381b7276b4
    license_key: d8da1bf508edbecfa229f05f00edb7428b7276b4
    xmit: false                           # if you want to record the metric data up to the point newrelic_set_appname is called, set this to true
    logging: false                        # If true, logs all New Relic interactions to the Symfony log
    instrument: false                     # If true, uses enhanced New Relic RUM instrumentation (see below)
    log_exceptions: true                  # If true, sends exceptions to New Relic
    log_commands: true                    # If true, logs CLI commands to New Relic as Background jobs (>2.3 only)
    using_symfony_cache: false            # Symfony HTTP cache (see below)
    transaction_naming: route             # route, controller or service (see below)
    transaction_naming_service: ~         # Transaction naming service (see below)
    ignored_routes: []                    # No transaction recorded for this routes
    ignored_paths: []                     # No transaction recorded for this paths
    ignored_commands: []                  # No transaction recorded for this commands (background tasks)

# Global Params (Override Bundle Defaults)
parameters:
    stems.site.theme: 'threadandmirror'
    stems.site.name: 'Thread & Mirror'
    stems.site.url: 'http://www.threadandmirror.com'
    stems.site.description: 'All Luxury, One Site: Fashion, Beauty, Blog, Street Chic, The Social Circle and Sale Alerts'
    stems.site.email: 'info@threadandmirror.com'
    stems.site.keywords: 'Fashion, Street Chic, Style, Clothing, Sales, Beauty, Blog, Style Exchange, Sale Alerts, Shop, Offer, High Fashion, Fashion Shows, Sample Sale, Sample Sales, Luxury'
    stems.media.image.categories: 
        general: 'General'
        blog:    'Blog'
    stems.sections.available:
        page:
            magazine:
                name: 'Magazine'
                enabled: true
                entity: 'StemsPageBundle:SectionMagazine'
                class: 'Stems\PageBundle\Entity\SectionMagazine'
                form: 'Stems\PageBundle\Form\SectionMagazineType'
            text:
                name: 'Text'
                enabled: true
                entity: 'StemsPageBundle:SectionText'
                class: 'Stems\PageBundle\Entity\SectionText'
                form: 'Stems\PageBundle\Form\SectionTextType'
            text_and_image:
                name: 'Text and Image'
                enabled: true
                entity: 'StemsPageBundle:SectionTextAndImage'
                class: 'Stems\PageBundle\Entity\SectionTextAndImage'
                form: 'Stems\PageBundle\Form\SectionTextAndImageType'
            image:
                name: 'Image'
                enabled: true
                entity: 'StemsPageBundle:SectionImage'
                class: 'Stems\PageBundle\Entity\SectionImage'
                form: 'Stems\PageBundle\Form\SectionImageType'
            poll:
                name: 'Poll'
                enabled: true
                entity: 'StemsPollBundle:SectionPoll'
                class: 'Stems\PollBundle\Entity\SectionPoll'
                form: 'Stems\PollBundle\Form\SectionPollType'
            product_gallery:
                name: 'Product Gallery'
                enabled: true
                entity: 'ThreadAndMirrorProductsBundle:SectionProductGallery'
                class: 'ThreadAndMirror\ProductsBundle\Entity\SectionProductGallery'
                form: 'ThreadAndMirror\ProductsBundle\Form\SectionProductGalleryType'
        blog:
            magazine:
                name: 'Magazine'
                enabled: true
                entity: 'StemsPageBundle:SectionMagazine'
                class: 'Stems\PageBundle\Entity\SectionMagazine'
                form: 'Stems\PageBundle\Form\SectionMagazineType'
            text:
                name: 'Text'
                enabled: true
                entity: 'StemsPageBundle:SectionText'
                class: 'Stems\PageBundle\Entity\SectionText'
                form: 'Stems\PageBundle\Form\SectionTextType'
            text_and_image:
                name: 'Text and Image'
                enabled: true
                entity: 'StemsPageBundle:SectionTextAndImage'
                class: 'Stems\PageBundle\Entity\SectionTextAndImage'
                form: 'Stems\PageBundle\Form\SectionTextAndImageType'
            image:
                name: 'Image'
                enabled: true
                entity: 'StemsPageBundle:SectionImage'
                class: 'Stems\PageBundle\Entity\SectionImage'
                form: 'Stems\PageBundle\Form\SectionImageType'
            poll:
                name: 'Poll'
                enabled: true
                entity: 'StemsPollBundle:SectionPoll'
                class: 'Stems\PollBundle\Entity\SectionPoll'
                form: 'Stems\PollBundle\Form\SectionPollType'
            blog_header:
                name: 'Blog Header'
                enabled: true
                entity: 'StemsBlogBundle:SectionBlogHeader'
                class: 'Stems\BlogBundle\Entity\SectionBlogHeader'
                form: 'Stems\BlogBundle\Form\SectionBlogHeaderType'
            product_gallery:
                name: 'Product Gallery'
                enabled: true
                entity: 'ThreadAndMirrorProductsBundle:SectionProductGallery'
                class: 'ThreadAndMirror\ProductsBundle\Entity\SectionProductGallery'
                form: 'ThreadAndMirror\ProductsBundle\Form\SectionProductGalleryType'

# Global Services
services:
    threadandmirror.logger:
        class: Symfony\Bridge\Monolog\Logger

    threadandmirror.product.parser:
        class: ThreadAndMirror\ProductsBundle\Service\ProductParser
        arguments: 
            em: "@doctrine.orm.entity_manager"

    threadandmirror.linkshare:
        class: ThreadAndMirror\ProductsBundle\Service\Linkshare
        arguments: 
            em: "@doctrine.orm.entity_manager"
            ProductParser: "@threadandmirror.product.parser"

    threadandmirror.product.filter:
        class: ThreadAndMirror\ProductsBundle\Service\ProductFilter
        arguments: 
            em: "@doctrine.orm.entity_manager"

# Logging
monolog:
    handlers:
        main:
            type: stream
            path: %kernel.root_dir%/%kernel.environment%.log
            level: error
        threadandmirror:
            type: stream
            path: %kernel.root_dir%/logs/threadandmirror.log
            level: warning